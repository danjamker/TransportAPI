{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"A",
				"APIID"
			],
			[
				"api",
				"APIKey"
			],
			[
				"a",
				"ATCOCode"
			],
			[
				"re",
				"restify"
			],
			[
				"mysqli_",
				"mysql_insert_id"
			],
			[
				"prop",
				"propertyid"
			],
			[
				"p",
				"propertyID"
			],
			[
				"from",
				"from_user_id"
			],
			[
				"id",
				"from_id"
			],
			[
				"nego",
				"id_negotiations"
			],
			[
				"chan",
				"chances"
			],
			[
				"chanc",
				"chanceID"
			],
			[
				"time",
				"timestamp"
			],
			[
				"user",
				"user_id"
			],
			[
				"j",
				"j"
			],
			[
				"var",
				"varb"
			],
			[
				"pos",
				"postcodeRegon"
			],
			[
				"po",
				"postcode"
			],
			[
				"post",
				"postcode"
			],
			[
				"da",
				"dataRegion"
			],
			[
				"t",
				"tpwine"
			],
			[
				"tp",
				"tppissed"
			],
			[
				"h",
				"hungover"
			],
			[
				"d",
				"drunk"
			],
			[
				"v",
				"vodka"
			],
			[
				"score",
				"scores"
			],
			[
				"len",
				"length"
			],
			[
				"co",
				"coordinates"
			],
			[
				"loc",
				"location"
			],
			[
				"q",
				"query"
			],
			[
				"yr",
				"yr"
			],
			[
				"lable",
				"labels"
			],
			[
				"bar",
				"barChart"
			],
			[
				"data",
				"dataSets"
			],
			[
				"in",
				"infiles"
			],
			[
				"ret",
				"returnStrcut"
			],
			[
				"hou",
				"hourly"
			],
			[
				"num",
				"num_bins"
			],
			[
				"tf",
				"tfcScore"
			],
			[
				"y",
				"y"
			],
			[
				"xL",
				"xlabel"
			],
			[
				"postCo",
				"postCodeRegion"
			],
			[
				"coll",
				"finalCollocation"
			],
			[
				"run",
				"RunTest"
			],
			[
				"term",
				"terms"
			],
			[
				"e",
				"except"
			],
			[
				"tn",
				"tnmc"
			],
			[
				"fin",
				"findNearPostCodeReagion"
			],
			[
				"file",
				"files"
			],
			[
				"open",
				"openFile"
			],
			[
				"Bi",
				"BigramCollocationMeasures"
			],
			[
				"fil",
				"filter_stops"
			],
			[
				"s",
				"stopset"
			],
			[
				"stop",
				"stopwords"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/index.js",
			"settings":
			{
				"buffer_size": 5452,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var log = require('debug'),\n    request = require('request'),\n    util = require('util'),\n    _ = require('lodash');\n\nfunction TransportAPIError (errors) {\n	  Error.captureStackTrace(this, TransportAPIError);\n	  this.errors = errors;\n	}\n\n	util.inherits(TransportAPIError, Error);\n\n	TransportAPIError.prototype.toString = function toString (){\n	  return \"TransportAPIError: \" + this.errors;\n	}\n\n	function TransportAPI (options) {\n	  if ( ! options) throw new ForecastError('APIKey and APIID must be set on TransportAPI options');\n	  if ( ! options.APIKey) throw new ForecastError('APIKey must be set on TransportAPI options');\n	  if ( ! options.APIID) throw new ForecastError('APIID must be set on TransportAPI options');\n\n	  this.APIKey = options.APIKey;\n	  this.APIID = options.APIID;\n	  this.url = 'http://transportapi.com/v3/uk';\n	}\n	\n	TransportAPI.prototype.LiveBusDepartures = function LiveBusDepartures (atcocode, format ,options, callback) {\n		  if (typeof options === 'function') {\n		    callback = options;\n		    options = {};\n		  }\n		  var url = this.url + \"/bus/stop/\" + atcocode +\"/live.\" + format;\n		  options[\"api_key\"] = this.APIKey\n		  options[\"app_id\"] = this.APIID\n		  var query = _.reduce(options, function (result, val, key) {\n		    if (result) return result + '&' + key + '=' + val;\n		    return result + '?' + key + '=' + val;\n		  }, '');\n\n		  url += query;\n		  console.log(url)\n		  log('get ' + url);\n\n		  request.get(url, function (err, res, data) {\n		    if (err) {\n		      callback(err);\n		    } else {\n		      data = JSON.parse(data);\n		      console.log(data)\n		      callback(null, res, data);\n		    }\n		  });\n		};\n\n	\n	TransportAPI.prototype.BusDepartures = function LiveBusDepartures (atcocode, format ,options, callback) {\n		  if (typeof options === 'function') {\n		    callback = options;\n		    options = {};\n		  }\n		  var url = this.url + \"/bus/stop/\" + atcocode +\"/timetable.\" + format;\n		  options[\"api_key\"] = this.APIKey\n		  options[\"app_id\"] = this.APIID\n		  var query = _.reduce(options, function (result, val, key) {\n		    if (result) return result + '&' + key + '=' + val;\n		    return result + '?' + key + '=' + val;\n		  }, '');\n\n		  url += query;\n		  console.log(url)\n		  log('get ' + url);\n\n		  request.get(url, function (err, res, data) {\n		    if (err) {\n		      callback(err);\n		    } else {\n		      data = JSON.parse(data);\n		      log(data)\n		      callback(null, res, data);\n		    }\n		  });\n		};\n\nmodule.exports = TransportAPI;",
			"file": "lib/main.js",
			"file_size": 2477,
			"file_write_time": 130283136670000000,
			"settings":
			{
				"buffer_size": 2477,
				"line_ending": "Unix"
			}
		},
		{
			"file": "configs.js",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 932,
				"line_ending": "Unix"
			}
		},
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 337,
				"line_ending": "Unix",
				"name": "test:"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"comme",
				"Toggle Comment"
			],
			[
				"comment",
				"Toggle Comment"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/danielkershaw/Documents/Code/TransportAPI/lib/main.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/node_modules/newrelic/newrelic.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/v0.1/Route/weather.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/v0.1/Model/weather.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/config.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/v0.1/bus.js",
		"/Users/danielkershaw/Documents/Code/ProjectNutMeg-API/npm-debug.log",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/jquery.sparkline.min.js",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/property_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/index.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/user_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/properties.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/insurance.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/insurace_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/transaction_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/activity-streams.css",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/chance_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/testpusher.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/untitled",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/chance.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/transaction.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/user.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/message.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/api.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/checkin_model.php",
		"/Users/danielkershaw/Documents/Code/Hackmanchester2013/checkin.php",
		"/Users/danielkershaw/Documents/University/Lancaster - Third Year/Third Year/Auction Server/policy",
		"/Users/danielkershaw/Documents/University/Lancaster - Third Year/Third Year/Auction Server/client.policy",
		"/Users/danielkershaw/Dropbox/SCC311/Practical Work/RMI Tutorial/rmiclient.java",
		"/Users/danielkershaw/Documents/Code/exporttoLABS1.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/word cloud/wordCouldProgram.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/wordcloud.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/geo.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/graphsAndCorrolation.py",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/wordfreqProvider.js",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/postcodeprovider.js",
		"/Users/danielkershaw/Documents/Code/TweetDoop/GEOJSON/import json.py",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/package.json",
		"/Users/danielkershaw/Documents/Code/TweetDoop/GEOJSON/EportToMongo.json",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/views/layout.jade",
		"/Users/danielkershaw/Documents/Code/TweetDoop/WordProbability Coefficent/coEfficent.py",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/dataprovider.js",
		"/Users/danielkershaw/Documents/Code/TweetDoop/CSS/colourpicker.py",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/views/index.jade",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/public/slider/css/slider.css",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/public/stylesheets/layout.css",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/public/stylesheets/population.css",
		"/Users/danielkershaw/Documents/Code/alcohol-twitter-map/public/stylesheets/style.css",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/mapperNEW.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/WordProbability Coefficent/coEfficentWeek.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/word cloud/geo.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/run.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/output.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/coEfficentWeek.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/WordFrequancyGraphs.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/mongodbimport.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/convert.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/GEOJSON/runMerge.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/GEOJSON/merge.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/merge.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/runMerge.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/runTerm.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/reducerNEW.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/termprobabilitydistribution.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/GEOJSON/convert.sh",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/termprobabilitydistribution.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Map Reduce/reducer.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/Data/L.kml",
		"/Users/danielkershaw/Documents/Code/TweetDoop/test/downloadkml.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/exportToJson/exportToJson.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/Data/rostcodetoRegion.csv",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/run.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/mapperNEW.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/reducerNEW.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/graphsAndCorrolation.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/reducerNEWcombontaions.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/mapperNEWCombination.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/combination.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/exportToJSONPostcodeRegion.py",
		"/Users/danielkershaw/Documents/Code/TweetDoop/run.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/untitled.py",
		"/Users/danielkershaw/Documents/node/Mining/twitterStream.js",
		"/usr/local/Cellar/hadoop/1.1.2/libexec/logs/hadoop-danielkershaw-datanode-unknown-70:56:81:9c:b1:8f-2.home.out",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/mapper-1.py",
		"/Users/danielkershaw/Documents/Code/run.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/timhhhe.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/postcodes.csv",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/regionScore.py",
		"/Users/danielkershaw/Dropbox/Map/raphael-min.js",
		"/Users/danielkershaw/Dropbox/Map/map.js",
		"/Users/danielkershaw/Dropbox/Map/map.html",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/geo.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/rostcodetoRegion.csv",
		"/Users/danielkershaw/Dropbox/Map/settings.js",
		"/Users/danielkershaw/Dropbox/Map/map.css",
		"/Users/danielkershaw/Documents/node/Mining/data.json",
		"/Users/danielkershaw/.shuttle.json",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/colocation.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/code.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/reader.py",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/mapper.py",
		"/Users/danielkershaw/Downloads/postcodes.csv",
		"/Users/danielkershaw/Dropbox/Apps/site44/fastcamexample.site44.com/index.html",
		"/Users/danielkershaw/Desktop/example.html",
		"/Users/danielkershaw/Dropbox/Highwire/Summer Project/Code/time.py",
		"/Users/danielkershaw/Dropbox/geo.py",
		"/Users/danielkershaw/Dropbox/run.py",
		"/Users/danielkershaw/Dropbox/time.py",
		"/Users/danielkershaw/Dropbox/colocation.py",
		"/Users/danielkershaw/Dropbox/mapper.py",
		"/Users/danielkershaw/Dropbox/reader.py",
		"/Users/danielkershaw/Dropbox/termDocumentMatrix.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"indent",
			"content",
			"email",
			"jquer",
			"buildingID",
			"distance",
			"console.log",
			"console",
			" =",
			"print",
			"decimal",
			"graph",
			"print ",
			"print",
			"\n		",
			"time",
			"print",
			"words",
			"termsDic",
			"()\n",
			"RegionHourly",
			"mkdir",
			"print",
			"UK",
			"print",
			")::\n",
			"n, bins, patches = plt.hist(x, num_bins, normed=1, facecolor='green', alpha=0.5)\n	# add a 'best fit' line\n	y = mlab.normpdf(bins, mu, sigma)\n	plt.plot(bins, y, 'r--')\n	plt.xlabel('Smarts')\n	plt.ylabel('Probability')\n	plt.title(r'Histogram of IQ: $\\mu=100$, $\\sigma=15$')\n\n	# Tweak spacing to prevent clipping of ylabel\n	plt.subplots_adjust(left=0.15)\n	plt.show()",
			"print",
			"W",
			"W1",
			"19",
			"M144",
			"M1",
			"html",
			"e44",
			"html",
			"html5",
			"html",
			"from",
			"prin",
			"print",
			"openFile",
			"getFiles",
			"buildTermDocumentMatrix",
			"path",
			"0",
			"long"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5452,
						"regions":
						{
						},
						"selection":
						[
							[
								2098,
								2120
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 123.0,
						"translation.y": 726.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2477,
						"regions":
						{
						},
						"selection":
						[
							[
								2380,
								2380
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "configs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								31
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 932,
						"regions":
						{
						},
						"selection":
						[
							[
								749,
								749
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 337,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								90
							]
						],
						"settings":
						{
							"auto_name": "test:",
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"project": "TransportAPI.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 215.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
